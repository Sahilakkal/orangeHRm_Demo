import tkinter as tk
from tkinter import messagebox
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing.sequence import pad_sequences
from tensorflow.keras.preprocessing.text import Tokenizer
import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder

model = load_model('your_model.h5')  # Update with the path to your saved model file

tokenizer = Tokenizer()
tokenizer.fit_on_texts(train_data)  # Make sure to have train_data available from the training code

label_encoder = LabelEncoder()
label_encoder.fit(train_labels)  # Make sure to have train_labels available from the training code

def predict_safety(code):
    code = code.replace('[^a-zA-Z0-9\s]', '')
    code_sequence = tokenizer.texts_to_sequences([code])
    code_padded = pad_sequences(code_sequence, maxlen=max_length, padding='post')
    prediction = model.predict(code_padded)
    predicted_class = label_encoder.inverse_transform([np.argmax(prediction)])[0]
    return predicted_class

def on_submit():
    code = code_entry.get("1.0", tk.END).strip()
    if code:
        safety = predict_safety(code)
        messagebox.showinfo("Safety Prediction", f"The code is predicted to be: {safety}")
    else:
        messagebox.showwarning("Error", "Please enter a code snippet.")

root = tk.Tk()
root.title("Code Safety Predictor")

code_label = tk.Label(root, text="Enter the code snippet:")
code_label.pack()

code_entry = tk.Text(root, height=10, width=50)
code_entry.pack()

submit_button = tk.Button(root, text="Predict", command=on_submit)
submit_button.pack()

root.mainloop()
